{"ast":null,"code":"import moment from\"moment\";var Util={camel:{toDash:function toDash(s){return s.replace(/[A-Z]/g,function(m){return\"-\"+m.toLowerCase();});},toSpace:function toSpace(s){return Util.camel.toDash(s).replaceAll(\"-\",\" \");}},object:{toLabel:function toLabel(s){if(!s)return'';var label='';var tmpArray=[];if(Array.isArray(s)){s.map(function(i){typeof i==='object'?tmpArray.push(i.name):tmpArray.push(i);});label=tmpArray.join(', ');}else if(typeof s==='object')label=s.name;else label=s;return label;},has:function has(s,term){var _s$name;var searchee=(_s$name=s.name)!==null&&_s$name!==void 0?_s$name:s;return searchee.toString().toLowerCase().includes(term.toLowerCase());},isEmpty:function isEmpty(s){return s&&Object.keys(s).length===0;},isObject:function isObject(s){return typeof s==='object'&&!Array.isArray(s)&&s!==null;},isUrl:function isUrl(url){try{return Boolean(new URL(url));}catch(_){return false;}}},array:{unique:function unique(arr){var hash={};arr.forEach(function(i){return hash[i.id]=i;});return Object.values(hash).sort(function(a,b){return a.id-b.id;});},isEmpty:function isEmpty(arr){return Array.isArray(arr)&&arr.length===0;}},func:{empty:function empty(){/* NOP */}},date:{from:function from(date){return moment(date).fromNow();},only:function only(date){return moment(date).format('l');},hub:function hub(date){return moment(date).format('MM/DD/YYYY');},time:function time(date){return moment(date).format(\"MM-DD-YYYY HH:mm:ss\");}},getParam:function getParam(key){var result=false,tmp=[];var items=window.location.search.substr(1).split(\"&\");for(var index=0;index<items.length;index++){tmp=items[index].split(\"=\");if(tmp[0]===key){result=decodeURIComponent(tmp[1]);}}return result;}};export default Util;","map":{"version":3,"names":["moment","Util","camel","toDash","s","replace","m","toLowerCase","toSpace","replaceAll","object","toLabel","label","tmpArray","Array","isArray","map","i","push","name","join","has","term","_s$name","searchee","toString","includes","isEmpty","Object","keys","length","isObject","isUrl","url","Boolean","URL","_","array","unique","arr","hash","forEach","id","values","sort","a","b","func","empty","date","from","fromNow","only","format","hub","time","getParam","key","result","tmp","items","window","location","search","substr","split","index","decodeURIComponent"],"sources":["/home/www/autoparts/client/src/Components/Common/Converter.js"],"sourcesContent":["import moment from \"moment\";\nconst Util = {\n    camel: {\n        toDash: s => s.replace(/[A-Z]/g, m => \"-\" + m.toLowerCase()),\n        toSpace: s => Util.camel.toDash(s).replaceAll(\"-\", \" \")\n    },\n    object: {\n        toLabel: s => {\n            if(!s) return '';\n            let label = '';\n            const tmpArray = []\n            if(Array.isArray(s)) {\n                s.map((i)=>{\n                    typeof i === 'object'?tmpArray.push(i.name):tmpArray.push(i)\n                })\n                label = tmpArray.join(', ')\n            }\n            else if(typeof s === 'object') label = s.name;\n            else label = s;\n            return label;\n        },\n        has: (s, term) => {\n            const searchee = s.name ?? s\n            return searchee.toString().toLowerCase().includes(term.toLowerCase())\n        },\n        isEmpty: s => s && Object.keys(s).length === 0,\n        isObject: s => typeof s === 'object' && !Array.isArray(s) && s !== null,\n        isUrl: (url) => {\n            try {\n                return Boolean(new URL(url))\n            }\n            catch (_){\n                return false;\n            }\n        }\n    },\n    array: {\n        unique: arr => {\n            const hash = { }\n            arr.forEach(i => hash[i.id] = i)\n            return Object.values(hash).sort((a, b) => a.id - b.id)\n        },\n        isEmpty: arr => {\n            return Array.isArray(arr) && arr.length === 0\n        },\n    },\n    func: {\n        empty: () => { /* NOP */ }\n    },\n    date:{\n        from:(date)=>{\n            return moment(date).fromNow();\n        },\n        only:(date)=>{\n            return moment(date).format('l');\n        },\n        hub:(date)=>{\n            return moment(date).format('MM/DD/YYYY');\n        },\n        time:(date)=>{\n            return moment(date).format(\"MM-DD-YYYY HH:mm:ss\");\n        }\n    },\n    getParam(key) {\n    let result = false,\n        tmp = [];\n    let items = window.location.search.substr(1).split(\"&\");\n    for (let index = 0; index < items.length; index++) {\n        tmp = items[index].split(\"=\");\n        if (tmp[0] === key) {\n            result = decodeURIComponent(tmp[1]);\n        }\n    }\n    return result;\n    }\n}\n\nexport default Util"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}